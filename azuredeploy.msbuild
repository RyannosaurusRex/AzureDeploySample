<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- A RegEx task -->
  <UsingTask TaskName="RegexReplace" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll" > 
    <ParameterGroup>
      <Pattern ParameterType="System.String" Required="true" />
      <Replacement ParameterType="System.String" Required="true" />
      <Files ParameterType="Microsoft.Build.Framework.ITaskItem[]" Required="true" />
      <WarnOnNoMatch ParameterType="System.Boolean" />
      <IgnoreCase ParameterType="System.Boolean" />
      <IgnorePatternWhitespace ParameterType="System.Boolean" />
      <RightToLeft ParameterType="System.Boolean" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System.Text.RegularExpressions"/>
      <Code Type="Fragment" Language="cs">
        <![CDATA[
        Log.LogMessage(MessageImportance.Low, "Pattern = {0}", Pattern);
        Log.LogMessage(MessageImportance.Low, "Replacement = {0}", Replacement);
        
        RegexOptions options = RegexOptions.Compiled | RegexOptions.Multiline;
        if (IgnoreCase)
          options |= RegexOptions.IgnoreCase;
        if (IgnorePatternWhitespace)
          options |= RegexOptions.IgnorePatternWhitespace;
        if (RightToLeft)
          options |= RegexOptions.RightToLeft;

        Regex regex = null;        
        try
        {
            regex = new Regex(Pattern, options);
        }
        catch (Exception ex)
        {
            Log.LogError("Pattern error: {0}", ex.Message);            
        }               

        foreach (ITaskItem file in Files)
        {
            try
            {
                string fileSpec = Path.GetFullPath(file.ItemSpec);
                string originalText = File.ReadAllText(fileSpec);
                string replacementText = regex.Replace(originalText, Replacement);

                if (WarnOnNoMatch && !regex.IsMatch(originalText))
                    Log.LogWarning("No matches in '{0}'.", fileSpec);

                if (originalText != replacementText)
                {
                    File.WriteAllText(fileSpec, replacementText);
                    Log.LogMessage("Changed '{0}'.", fileSpec);
                }
                else
                    Log.LogMessage("Skipped '{0}' (no changes)", fileSpec);
            }
            catch (Exception ex)
            {
                Log.LogError("File error: {0}", ex.Message);                
            }
        }
        ]]>        
      </Code>
    </Task>
  </UsingTask> 
  
  <PropertyGroup Condition="'$(BuildType)' == ''">
    <BuildType>Release</BuildType>
  </PropertyGroup>
 
  <!-- Azure Information -->
  <PropertyGroup>
    <HostedServiceName>YOUR SERVICE NAME</HostedServiceName>
    <StorageAccountName>YOUR STORAGE ACCOUNT</StorageAccountName>
    <StorageAccountKey>YOUR STORAGE ACCOUNT KEY</StorageAccountKey>
    <ApiCertThumbprint>YOUR API CERT THUMBPRINT</ApiCertThumbprint>
    <SubscriptionKey>YOUR SUBSCRIPTION KEY</SubscriptionKey>
    <HostSlot>Staging</HostSlot>
  </PropertyGroup>
  
  <!-- Certificate Information -->
  <PropertyGroup>
    <CertLocation>"$(MSBuildProjectDirectory)\localhost.pfx"</CertLocation>
    <CertPassword>xyz</CertPassword>
    <DeployCertAlgorithm>sha1</DeployCertAlgorithm>
    <DeployCertThumbprint>5A074D678466F59DBD063D1A98B1791474723365</DeployCertThumbprint>
  </PropertyGroup>
  
  <!-- Project/Solution Information -->
  <PropertyGroup>
    <AzureProjectName>AzureDeploy.Cloud.ccproj</AzureProjectName>
    <AzureProjectPath>src\AzureDeploy.Cloud</AzureProjectPath>
    <SolutionToBuild>src\AzureDeploy.sln</SolutionToBuild>
    <PackageName>AzureDeploy.Cloud.cspkg</PackageName>
    <ServiceConfigName>ServiceConfiguration.cscfg</ServiceConfigName>
    <PackageLocation>"$(MSBuildProjectDirectory)\$(AzureProjectPath)\bin\$(BuildType)\Publish"</PackageLocation>
  </PropertyGroup>
  
  <Target Name="BuildTasks">
    <MSBuild
      Projects="src\BuildTasks\MSBuildTasks.sln"
      Targets="Build"
      Properties="Configuration=$(BuildType)"/>
  </Target>
  
  <Target Name="Clean">
    <MSBuild
      Projects="$(SolutionToBuild)"
      Targets="Clean"
      Properties="Configuration=$(BuildType)"/>
  </Target>

  <Target Name="Build">
    <MSBuild
      Projects="$(SolutionToBuild)"
      Targets="Build"
      Properties="Configuration=$(BuildType)"/>
  </Target>
  
  <Target Name="SetConnectionStrings" DependsOnTargets="BuildTasks">
    <RegexReplace
        Pattern='Setting name="DiagnosticsConnectionString" value="UseDevelopmentStorage=true"'
        Replacement='Setting name="DiagnosticsConnectionString" value="DefaultEndpointsProtocol=https;AccountName=$(StorageAccountName);AccountKey=$(StorageAccountKey)"'
        Files='$(AzureProjectPath)\$(ServiceConfigName)'/>
    <RegexReplace
        Pattern='Setting name="DataConnectionString" value="UseDevelopmentStorage=true"'
        Replacement='Setting name="DataConnectionString" value="DefaultEndpointsProtocol=https;AccountName=$(StorageAccountName);AccountKey=$(StorageAccountKey)"'
        Files='$(AzureProjectPath)\$(ServiceConfigName)'/>
  </Target>
  
  <Target Name="SetDevConnectionStrings" DependsOnTargets="BuildTasks">
    <RegexReplace
        Replacement='Setting name="DiagnosticsConnectionString" value="UseDevelopmentStorage=true"'
        Pattern='Setting name="DiagnosticsConnectionString" value="DefaultEndpointsProtocol=https;AccountName=$(StorageAccountName);AccountKey=$(StorageAccountKey)"'
        Files='$(AzureProjectPath)\$(ServiceConfigName)'/>
    <RegexReplace
        Pattern='Setting name="DataConnectionString" value="DefaultEndpointsProtocol=https;AccountName=$(StorageAccountName);AccountKey=$(StorageAccountKey)"'
        Replacement='Setting name="DataConnectionString" value="UseDevelopmentStorage=true"'
        Files='$(AzureProjectPath)\$(ServiceConfigName)'/>
  </Target>
  
  <Target Name="DeployCert">
    <Exec WorkingDirectory="$(MSBuildProjectDirectory)" 
      Command="$(windir)\system32\WindowsPowerShell\v1.0\powershell.exe -f deploycert.ps1 $(HostedServiceName) $(CertLocation) $(CertPassword) $(ApiCertThumbprint) $(SubscriptionKey) $(DeployCertAlgorithm) $(DeployCertThumbprint)" />
  </Target>
  
  <Target Name="Deploy" DependsOnTargets="BuildTasks;SetConnectionStrings;Build;DeployCert">
    <MSBuild
      Projects="$(AzureProjectPath)\$(AzureProjectName)"
      Targets="CorePublish"
      Properties="Configuration=$(BuildType)"/>
    
    <Exec WorkingDirectory="$(MSBuildProjectDirectory)" 
      Command="$(windir)\system32\WindowsPowerShell\v1.0\powershell.exe -NoProfile -f deploy.ps1 $(PackageLocation) $(PackageName) $(ServiceConfigName) $(HostedServiceName) $(ApiCertThumbprint) $(SubscriptionKey) $(HostSlot) $(StorageAccountName)" />
    
  </Target>
</Project>